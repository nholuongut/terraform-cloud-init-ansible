#!/bin/bash

set -o errexit -o errtrace -o pipefail
trap signal_and_exit ERR

function my_instance_id
{
  curl -sL http://169.254.169.254/latest/meta-data/instance-id/
}

function my_az
{
  curl -sL http://169.254.169.254/latest/meta-data/placement/availability-zone/
}

function my_aws_region
{
  local az
  az=$$(my_az)
  echo "$${az%?}"
}

# Signaling that this instance is unhealthy allows AWS auto scaling to launch a copy 
# Provides for self healing and helps mitigate transient failures (e.g. package transfers)
function signal_and_exit
{
  status=$$?
  if [ $$status -gt 0 ]; then
    sleep 180 # give me a few minutes to look around before croaking
    aws autoscaling set-instance-health \
      --instance-id "$$(my_instance_id)" \
      --health-status Unhealthy \
      --region "$$(my_aws_region)"
  fi
}

#-----^ AWS safety guards ^-----
apt-add-repository ppa:ansible/ansible
apt-get -qq update
apt-get -yqq install python-pip python-setuptools awscli ansible git
pip install boto3

cat >> /etc/ansible/ansible.cfg <<EOF
log_path = /var/log/ansible.log
EOF

mkdir -p /tmp/ansible

cd /tmp/ansible 
ansible-galaxy install -f -r requirements.yml -p roles/

ansible-playbook \
 -e @/tmp/ansible/seed config.yml \
 -c local | tee /var/log/ansible.log 
